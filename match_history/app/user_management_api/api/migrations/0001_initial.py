# Generated by Django 5.1.1 on 2024-10-11 09:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player1_score', models.IntegerField(default=0)),
                ('player2_score', models.IntegerField(default=0)),
                ('round', models.CharField(choices=[('ROUND_OF_16', 'Round of 16'), ('QUARTER_FINALS', 'Quarter Finals'), ('SEMI_FINALS', 'Semi Finals'), ('FINAL', 'Final')], max_length=20)),
                ('order', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='ApiUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=100)),
                ('avatar_image', models.ImageField(blank=True, default='avatars/default.jpg', null=True, upload_to='avatars/')),
                ('friends', models.CharField(blank=True, max_length=200, null=True)),
                ('friends_wait', models.CharField(blank=True, max_length=200, null=True)),
                ('friends_request', models.CharField(blank=True, max_length=200, null=True)),
                ('friends_blocked', models.CharField(blank=True, max_length=200, null=True)),
                ('user_42', models.BooleanField(default=False)),
                ('oauth_id', models.CharField(blank=True, max_length=200, null=True)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('two_factor_secret', models.CharField(blank=True, max_length=32, null=True)),
                ('two_factor_configured', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player1_score', models.IntegerField(default=0)),
                ('player2_score', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='api.match')),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apiuser')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='player1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player1', to='api.participation'),
        ),
        migrations.AddField(
            model_name='match',
            name='player2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player2', to='api.participation'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_won', to='api.participation'),
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('POINT', 'Point Scored'), ('PAUSE', 'Game Paused'), ('RESUME', 'Game Resumed'), ('END', 'Game Ended')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='api.game')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.participation')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games_won', to='api.participation'),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('REGISTRATION', 'Registration'), ('IN_PROGRESS', 'In Progress'), ('FINISHED', 'Finished')], default='REGISTRATION', max_length=20)),
                ('tournament_type', models.CharField(max_length=20)),
                ('max_participants', models.IntegerField(default=0)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tournaments', to='api.apiuser')),
            ],
        ),
        migrations.AddField(
            model_name='participation',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='api.tournament'),
        ),
        migrations.AddField(
            model_name='apiuser',
            name='participated_tournaments',
            field=models.ManyToManyField(blank=True, related_name='api_participants', to='api.tournament'),
        ),
        migrations.AddField(
            model_name='apiuser',
            name='tournaments',
            field=models.ManyToManyField(blank=True, related_name='participants', to='api.tournament'),
        ),
        migrations.AlterUniqueTogether(
            name='participation',
            unique_together={('tournament', 'user')},
        ),
    ]
