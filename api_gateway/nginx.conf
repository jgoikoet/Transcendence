upstream user_management_api {
    server user_management_api:8080;
}

upstream multiplayer_service {
    server multiplayer_service:8080;
}

upstream chat_service {
    server chat_service:8080;
}

upstream match_history_api {
    server match_history_api:8080;
}

upstream multiplayer_cobete_service {
    server multiplayer_cobete_service:8080;
}

server {
    listen       443 ssl default_server;
    listen  [::]:443 ssl default_server;
    server_name  localhost;

	ssl_certificate		/etc/nginx/ssl/ssl.crt;
    ssl_certificate_key	/etc/nginx/ssl/ssl.key;
    ssl_protocols		TLSv1.2 TLSv1.3;

    location /user_management/ {
        proxy_pass http://user_management_api/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

	location /user_management/api/auth/ {
		if ($request_method = "OPTIONS") {
			add_header Access-Control-Allow-Origin "*";
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
			add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
			add_header Access-Control-Max-Age 3600;
			return 204; # Optionally return 204 No Content
		}

		if ($http_authorization = "") {
            return 401;
        }

		proxy_pass http://user_management_api/api/auth/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /multiplayer/ {
        proxy_pass http://multiplayer_service/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
		
		# WebSocket specific headers
		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

	location /chat/ {
        proxy_pass http://chat_service/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

		# WebSocket specific headers
		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

	location /chat/chat/ {
		if ($request_method = "OPTIONS") {
			add_header Access-Control-Allow-Origin "*";
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
			add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
			add_header Access-Control-Max-Age 3600;
			return 204; # Optionally return 204 No Content
		}

		if ($http_authorization = "") {
            return 401;
        }

		proxy_pass http://chat_service/chat/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

		# WebSocket specific headers
		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	}

	location /match_history/ {
		if ($request_method = "OPTIONS") {
			add_header Access-Control-Allow-Origin "*";
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
			add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
			add_header Access-Control-Max-Age 3600;
			return 204; # Optionally return 204 No Content
		}

		if ($http_authorization = "") {
            return 401;
        }

        proxy_pass http://match_history_api/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

	location /multiplayer_cobete/ {
        proxy_pass http://multiplayer_cobete_service/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
		
		# WebSocket specific headers
		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

	location /multiplayer_cobete/game/ {
		if ($request_method = "OPTIONS") {
			add_header Access-Control-Allow-Origin "*";
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
			add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
			add_header Access-Control-Max-Age 3600;
			return 204; # Optionally return 204 No Content
		}

		if ($http_authorization = "") {
            return 401;
        }

		proxy_pass http://multiplayer_cobete_service/game/;

		# Set original request headers
		proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
		
		# WebSocket specific headers
		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	}
}
